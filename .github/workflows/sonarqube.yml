name: SonarQube Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  sonarqube:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:community
        ports:
          - 9000:9000
        options: --name sonarqube-test

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Esperar a que SonarQube esté listo
        run: |
          echo "Esperando a que SonarQube esté saludable..."
          for i in {1..30}; do
            STATUS=$(curl -s http://localhost:9000/api/system/health | grep -o '"status":"[^"]*"' || true)
            echo "Estado: $STATUS"
            if [[ "$STATUS" == '"status":"GREEN"' ]]; then
              break
            fi
            sleep 5
          done

      - name: Instalar SonarScanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-7.2.0.5079-linux-x64.zip
          unzip sonar-scanner-cli-7.2.0.5079-linux-x64.zip
          echo "$PWD/sonar-scanner-7.2.0.5079-linux-x64/bin" >> $GITHUB_PATH

      - name: Crear archivo sonar-project.properties
        run: |
          echo "sonar.projectKey=homeService_API" > sonar-project.properties
          echo "sonar.sources=." >> sonar-project.properties
          echo "sonar.host.url=http://localhost:9000" >> sonar-project.properties
          echo "sonar.token=${{ secrets.SONAR_TOKEN }}" >> sonar-project.properties

      - name: Ejecutar análisis SonarQube
        run: |
          sonar-scanner

